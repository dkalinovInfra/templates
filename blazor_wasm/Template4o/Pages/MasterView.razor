@page "/"
@using Template4o.DashboardData;
@inject DashboardDataService dashboardDataService
@inject IJSRuntime JS

<div class="row-layout master-view-container">
    <IgbGrid Data="dashboardDataAllTeamMembers" PrimaryKey="FirstName" AutoGenerate="false"
        Width="1200px" Height="600px" class="ig-typography grid" master-view-scope>
        <IgbColumn Field="FirstName"
                   Header="First Name Header Template"
                   HeaderTemplateScript="firstNameHeaderTemplate">
        </IgbColumn>
        <IgbColumn Field="LastName"
                   Header="Last Name Inline Edit Template"
                   Editable=true>
            <BodyTemplate>
                @(context.Cell.Value.ToString() ?? string.Empty) CT
                @*@(GetCellValue(context)) CT*@
            </BodyTemplate>
        </IgbColumn>
        <IgbColumn Field="HireDate"
                   Header="Hire Date Two Templates"
                   DataType="GridColumnDataType.Date"
                   Editable=true
                   BodyTemplateScript="hireDateCellTemplate"
                   InlineEditorTemplateScript="hireDateCellEditTemplate">
        </IgbColumn>
        <IgbColumn Field="HireDate"
                   Header="Hire Date Edit Template"
                   DataType="GridColumnDataType.Date"
                   Editable=true
                   InlineEditorTemplateScript="hireDateCellEditTemplate">
        </IgbColumn>
    </IgbGrid>
</div>

@code {
    private AllTeamMembersType[] dashboardDataAllTeamMembers = Array.Empty<AllTeamMembersType>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var module = await JS.InvokeAsync<IJSObjectReference>("import", "./Pages/MasterView.razor.js");
        }
    }

    public string GetCellValue(IgbCellTemplateContext ctx)
    {
        return ctx.Cell?.Value?.ToString() ?? string.Empty;
    }

    protected override async Task OnInitializedAsync()
    {
        dashboardDataAllTeamMembers =
            await this.dashboardDataService.GetAllTeamMembers() ?? dashboardDataAllTeamMembers;
    }
}
